@model Exam_Online.Models.IndexModel.QuestionModel

@{
    var totalQuestion = Model.TotalQuestionInset;
    var endTime = ((DateTime)ViewBag.TimeExpire);
    var timeRemaining = TimeSpan.FromTicks(endTime.Ticks - DateTime.Now.Ticks).TotalSeconds;
}

@{
    ViewData["Title"] = "EvalPage";
}

<h2>EvalPage</h2>

<br />

<div class="row">
    <div class="col-md-3">
        <p class="question-number">Question : @(Model.QuestionNumber)</p>
    </div>
    <div class="col-md-3">
        <p>Time Remaining : <span id="HrRemaining"></span>:<span id="minRemaining"></span>:<span id="secRemaining"></span></p>
    </div>
</div>



<table>
    <tr>

        <td><a href="javascript:void(0);" class="btn btn-primary" onclick="saveBackward(this);"> << Save & Previous</a></td>
        <td><a href="@Url.Action("EvalPage", new { @token = Model.Token, @tid = Model.TestId, @qno = (Model.QuestionNumber > 1 ? Model.QuestionNumber - 1 : 1)})" class="btn btn-default"> << Previous</a></td>
        @for (int i = 0; i < Model.TotalQuestionInset; i++)
        {
            <td>
                <a href="@Url.Action("EvalPage", new { @token = Model.Token, @tid = Model.TestId, @qno = (i + 1)})" class="btn @(Model.QuestionNumber == (i+1) ? "btn-primary" : "btn-default")">@(i + 1)</a>
            </td>
        }
        <td><a href="@Url.Action("EvalPage", new { @token = Model.Token, @tid = Model.TestId, @qno = (Model.QuestionNumber < (totalQuestion - 1) ? Model.QuestionNumber + 1 : totalQuestion) })" class="btn btn-default"> Next >></a></td>
        <td><a href="javascript:void(0);" class="btn btn-primary" onclick="saveForward(this);"> << Save & Next</a></td>

    </tr>
</table>

<hr />


<div class="row">
    <p>
        <hr/>
        @Html.Raw(Model.Question ?? "")
    </p>
</div>

<hr />
<hr />

<div class="row">

    @switch (Model.QuestionType)
    {
        case "RADIO":
            <div>Choose th correct answer</div>
            <ul>
                @for (int i = 0; i < Model.Options.Count; i++)
                {
                    <li>
                        <input type="hidden" name="UserChoices[@i].ChoiceId" value="@(Model.Options[i].ChoiceId)" />
                        <input type="radio" name="UserChoices[@i].IsChecked" @(!string.IsNullOrEmpty(Model.Options[i].Answer) ? "CHECKED" : "") />
                        <span class="code">@Html.Raw(Model.Options[i].Label.Replace("[", "&lt;").Replace("]", "&gt;"))</span>
                    </li>
                }
            </ul>
            <input type="hidden" name="Answer" value="no data" />
            break;

        case "MULTIPLE":
            <div>Choose all that is correct</div>
            <ul>
                @for (int i = 0; i < Model.Options.Count; i++)
                {
                    <li>
                        <input type="hidden" name="UserChoices[@i].ChoiceId" value="@(Model.Options[i].ChoiceId)" />
                        <input type="checkbox" name="UserChoices[@i].IsChecked" @(!string.IsNullOrEmpty(Model.Options[i].Answer) ? "CHECKED" : "") />
                        <span class="code">@Html.Raw(Model.Options[i].Label.Replace("[", "&lt;").Replace("]", "&gt;"))</span>
                    </li>
                }
            </ul>
            <input type="hidden" name="Answer" />
            break;

        case "TEXT":
            <div>Write your thoughts</div>
            <div>
                <p>
                    <input type="hidden" name="UserChoices[0].ChoiceId" value="@(Model.Options[0].ChoiceId)" />
                    <textarea name="Answer" class="form-control">@(Model.Options[0].Answer)</textarea>
                </p>
            </div>
            <input type="hidden" name="Answer" value="no data" />
            break;
    }

</div>



<script>
    var reaSeconds = @timeRemaining;
    var secondsCounter = reaSeconds % 60;
    var hrsCounter = (reaSeconds / 60) % 60;

    function formatNumber(number) {
        if (number < 10)
            return '0' + number;
        else
            return '' + number;
    }

    function startTick() {
        document.getElementById('secRemaining').innerText = formatNumber(parseInt(secondsCounter));
        document.getElementById('minRemaining').innerText = formatNumber(parseInt((reaSeconds / 60) % 60));
        document.getElementById('HrRemaining').innerText = formatNumber(parseInt(reaSeconds / 3600));

        var _tick = setInterval(function () {
            if (reaSeconds > 0) {
                reaSeconds = reaSeconds - 1;
                secondsCounter = secondsCounter - 1;
                document.getElementById('secRemaining').innerText = formatNumber(parseInt(secondsCounter));
                document.getElementById('minRemaining').innerText = formatNumber(parseInt((reaSeconds / 60) % 60));
                document.getElementById('HrRemaining').innerText = formatNumber(parseInt(reaSeconds / 3600));

                if (secondsCounter <= 0)
                    secondsCounter = 60;
            }
            else {                
                clearInterval(_tick);
                location.reload(true);
            }

        }, 1000);
    }

    startTick();
</script>


